{{- if .Values.enabled }}
# A headless service to create DNS records.
apiVersion: v1
kind: Service
metadata:
  name: minio-gateway
  labels:
    app: minio-gateway
    chart: {{ template "hdfs-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  ports:
  - port: 9000
    name: http
  clusterIP: None
  selector:
    app: minio-gateway
    release: {{ .Release.Name }}
{{- end }}
---
{{- if .Values.enabled }}
apiVersion: apps/v1
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: minio-gateway
  labels:
    app: minio-gateway
    chart: {{ template "hdfs-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio-gateway
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: minio-gateway
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: wait-for-namenode
          image: {{ .Values.initContainers.repository }}:{{ .Values.initContainers.tag }}
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ template "hdfs-k8s.namenode.fullname" . }}-active 8020 && echo namenode ok; do
                sleep 2;
              done;
      containers:
        - name: hdfs-minio-gateway
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          ports:
            - name: service
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secretkey
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
            - name: MULTIHOMED_NETWORK
              value: "0"
            - name: CURRENT_ACTIVE
              value: "nn0"
          command: ['/bin/sh', '-c','/minio-scripts/start-gateway.sh' ]
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: service
              scheme: HTTP              
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: service
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: hdfs-config
              mountPath: /etc/hadoop
              readOnly: true
            - name: minio-scripts
              mountPath: /minio-scripts
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: hdfs-config
          configMap:
            name: {{ template "hdfs-k8s.config.fullname" . }}
        - name: minio-scripts
          configMap:
            name: minio-scripts
            defaultMode: 0744
        - name: minio-secret
          secret:
            secretName: minio-secret
{{- end }}
---
{{- if .Values.enabled }}
# Provides namenode helper scripts. Most of them are start scripts
# that meet different needs.
# TODO: Support upgrade of metadata in case a new Hadoop version requires it.
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-scripts
  labels:
    app: minio-gateway
    chart: {{ template "hdfs-k8s.subchart" . }}
    release: {{ .Release.Name }}
data:
  start-gateway.sh: |
    #!/usr/bin/env bash
    minio gateway hdfs hdfs://{{ template "hdfs-k8s.namenode.fullname" . }}-active:8020
{{- end }}
